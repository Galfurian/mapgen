[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mapgen"
version = "0.1.0"
description = "A Python library for procedural fantasy map generation"
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.8"
authors = [
    {name = "Enrico", email = "enrico@example.com"},
]
maintainers = [
    {name = "Enrico", email = "enrico@example.com"},
]
keywords = ["map", "generation", "fantasy", "procedural", "noise"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Games/Entertainment",
    "Topic :: Multimedia :: Graphics",
]
dependencies = [
    "numpy>=1.21.0",
    "matplotlib>=3.5.0",
    "noise>=1.2.2",
    "networkx>=2.6.0",
    "scipy>=1.7.0",
    "scikit-learn>=1.0.0",
    "Pillow>=8.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=4.0.0",
    "mypy>=0.950",
]
docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/Galfurian/mapgen"
Repository = "https://github.com/Galfurian/mapgen"
Issues = "https://github.com/Galfurian/mapgen/issues"
Changelog = "https://github.com/Galfurian/mapgen/blob/main/CHANGELOG.md"

[tool.hatch.build.targets.wheel]
packages = ["src/mapgen"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["mapgen"]
known_third_party = ["numpy", "matplotlib", "noise", "networkx", "scipy", "sklearn"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "noise.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=mapgen --cov-report=term-missing --cov-report=html"
testpaths = [
    "tests",
]